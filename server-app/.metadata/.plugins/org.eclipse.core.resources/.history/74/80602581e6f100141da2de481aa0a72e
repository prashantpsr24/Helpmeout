package soundserver;

import sun.audio.*;

import java.io.*;
import java.io.*;
import java.net.URL;
import javax.sound.sampled.*;
import javax.swing.*;

 
public class AlarmSpeaker
{
	AudioStream audioStream;
	private boolean status=true;
  public static void main(String[] args) 
  {
	  try
      {
	   	int port=6070;
       //  Thread t = new NetworkModule(port);
        // t.start();
         
      }
   catch(IOException e)
      {
         e.printStackTrace();
      }
  }
  
  public void playSound() 
  {
    try
    {
      // get the sound file as a resource out of my jar file;
      // the sound file must be in the same directory as this class file.
      // the input stream portion of this recipe comes from a javaworld.com article.
    	System.out.println("Trying");
    	InputStream inputStream = getClass().getResourceAsStream("husten.wav");
    	System.out.println(inputStream);
    	audioStream = new AudioStream(inputStream);
    	while(status)
    	{
    		AudioPlayer.player.start(audioStream);
    	}
    }
    catch (Exception e)
    {
    	 System.out.println("Tried2");
      // a special way i'm handling logging in this application
      e.printStackTrace();
    }
  }
  
  public void stopSound() 
  {
    try
    {
      status = false;
      AudioPlayer.player.stop(audioStream);
      
    }
    catch (Exception e)
    {
    	 System.out.println("Tried2");
      // a special way i'm handling logging in this application
      e.printStackTrace();
    }
  }
  
  
  public void SoundClipTest() {
      
      try {
         // Open an audio input stream.
         URL url = this.getClass().getClassLoader().getResource("husten.wav");
         AudioInputStream audioIn = AudioSystem.getAudioInputStream(url);
         // Get a sound clip resource.
         Clip clip = AudioSystem.getClip();
         // Open audio clip and load samples from the audio input stream.
         clip.open(audioIn);
         clip.start();
      } catch (UnsupportedAudioFileException e) {
         e.printStackTrace();
      } catch (IOException e) {
         e.printStackTrace();
      } catch (LineUnavailableException e) {
         e.printStackTrace();
      }
   }
   
}